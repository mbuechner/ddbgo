diff --git a/config/schema/unique_field_ajax.schema.yml b/config/schema/unique_field_ajax.schema.yml
index b5146aa..6112e96 100644
--- a/config/schema/unique_field_ajax.schema.yml
+++ b/config/schema/unique_field_ajax.schema.yml
@@ -1,16 +1,32 @@
-field.field.*.*.*.third_party.unique:
+field.field.*.*.*.third_party.unique_field_ajax:
   type: mapping
   label: Unique field third party settings
   mapping:
     unique:
-      type: checkbox
+      type: boolean
       label: Set if field is unique or not
     per_lang:
-      type: checkbox
+      type: boolean
       label: Unique per language
     use_ajax:
-      type: checkbox
-      label: Use ajax
+      type: boolean
+      label: Use ajax validation
     message:
-      type: textarea
-      label: Use ajax
+      type: string
+      label: Validation error message
+node.type.*.third_party.unique_field_ajax:
+  type: mapping
+  label: 'Unique field node third party settings'
+  mapping:
+    unique_title:
+      type: boolean
+      label: 'Set if node requires unique titles'
+    per_lang:
+      type: boolean
+      label: Unique per language
+    use_ajax:
+      type: boolean
+      label: Use ajax validation
+    message:
+      type: string
+      label: Validation error message
diff --git a/unique_field_ajax.module b/unique_field_ajax.module
index 114bb66..0277170 100644
--- a/unique_field_ajax.module
+++ b/unique_field_ajax.module
@@ -9,6 +9,10 @@ use Drupal\Component\Utility\NestedArray;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Routing\RouteMatchInterface;
 use Drupal\field\Entity\FieldConfig;
+use Drupal\Core\Field\BaseFieldDefinition;
+use Drupal\Core\Field\Entity\BaseFieldOverride;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\Core\Entity\ContentEntityType;
 
 /**
  * Implements hook_help().
@@ -50,56 +54,172 @@ function unique_field_ajax_form_field_config_edit_form_alter(&$form, FormStateIn
   if (!$field->getFieldStorageDefinition()->isMultiple()) {
     if (in_array($field->getType(), $unique_field_ajax_types)) {
 
-      $form['third_party_settings']['unique_field_ajax']['unique'] = array(
+      $form['third_party_settings']['unique_field_ajax']['unique'] = [
         '#type' => 'checkbox',
         '#title' => t("Unique"),
         '#default_value' => $field->getThirdPartySetting('unique_field_ajax', 'unique'),
         '#weight' => -10,
-      );
+      ];
 
-      $form['third_party_settings']['unique_field_ajax']['per_lang'] = array(
+      $form['third_party_settings']['unique_field_ajax']['per_lang'] = [
         '#type' => 'checkbox',
         '#title' => t("Per Language"),
         '#description' => t("Do not allow duplicated content per language"),
         '#default_value' => $field->getThirdPartySetting('unique_field_ajax', 'per_lang'),
         '#weight' => -9,
-        '#states' => array(
-          'visible' => array(
-            ':input[name="third_party_settings[unique_field_ajax][unique]"]' => array('checked' => TRUE)
-          ),
-        ),
-      );
-
-      $form['third_party_settings']['unique_field_ajax']['use_ajax'] = array(
+        '#states' => [
+          'visible' => [
+            ':input[name="third_party_settings[unique_field_ajax][unique]"]' => ['checked' => TRUE],
+          ],
+        ],
+      ];
+
+      $form['third_party_settings']['unique_field_ajax']['use_ajax'] = [
         '#type' => 'checkbox',
         '#title' => t("Use Ajax"),
         '#description' => t("Use ajax for validation."),
         '#default_value' => $field->getThirdPartySetting('unique_field_ajax', 'use_ajax'),
         '#weight' => -8,
-        '#states' => array(
-          'visible' => array(
-            ':input[name="third_party_settings[unique_field_ajax][unique]"]' => array('checked' => TRUE)
-          ),
-        ),
-      );
-
-      $form['third_party_settings']['unique_field_ajax']['message'] = array(
+        '#states' => [
+          'visible' => [
+            ':input[name="third_party_settings[unique_field_ajax][unique]"]' => ['checked' => TRUE],
+          ],
+        ],
+      ];
+
+      $form['third_party_settings']['unique_field_ajax']['message'] = [
         '#type' => 'textarea',
         '#title' => t("Error message"),
         '#description' => t("The message to show under the field when the value is not unique"),
         '#default_value' => $field->getThirdPartySetting('unique_field_ajax', 'message'),
         '#weight' => -7,
-        '#states' => array(
-          'visible' => array(
-            ':input[name="third_party_settings[unique_field_ajax][unique]"]' => array('checked' => TRUE)
-          ),
-        ),
-      );
+        '#states' => [
+          'visible' => [
+            ':input[name="third_party_settings[unique_field_ajax][unique]"]' => ['checked' => TRUE],
+          ],
+        ],
+      ];
 
     }
   }
 }
 
+/**
+ * Alter forms to add unique title checkbox
+ *   - node type add/edit.
+ *
+ * @param [type] $form
+ * @param \Drupal\Core\Form\FormStateInterface $form_state
+ * @param [type] $form_id
+ *
+ * @return void
+ */
+function unique_field_ajax_form_alter(&$form, FormStateInterface $form_state, $form_id) {
+  if (_unique_field_ajax_is_config_form($form_id)) {
+    $entity = $form_state->getFormObject()->getEntity();
+    $form['unique_field_ajax'] = [
+      '#type' => 'details',
+      '#group' => 'additional_settings',
+      '#title' => t('Unique title settings'),
+    ];
+    $form['unique_field_ajax']['unique_field_ajax_unique_title'] = [
+      '#type' => 'checkbox',
+      '#title' => t("Enforce unique title"),
+      '#default_value' => $entity->getThirdPartySetting('unique_field_ajax', 'unique_title'),
+      '#description' => t('Validate that nodes within this bundle do not have duplicate titles'),
+      '#weight' => -10,
+    ];
+    $form['unique_field_ajax']['unique_field_ajax_per_lang'] = [
+      '#type' => 'checkbox',
+      '#title' => t("Per Language"),
+      '#description' => t("Do not allow duplicated content per language"),
+      '#default_value' => $entity->getThirdPartySetting('unique_field_ajax', 'per_lang'),
+      '#weight' => -9,
+      '#states' => [
+        'visible' => [
+          ':input[name="unique_field_ajax_unique_title"]' => ['checked' => TRUE],
+        ],
+      ],
+    ];
+    $form['unique_field_ajax']['unique_field_ajax_use_ajax'] = [
+      '#type' => 'checkbox',
+      '#title' => t("Use Ajax"),
+      '#description' => t("Use ajax for validation."),
+      '#default_value' => $entity->getThirdPartySetting('unique_field_ajax', 'use_ajax'),
+      '#weight' => -8,
+      '#states' => [
+        'visible' => [
+          ':input[name="unique_field_ajax_unique_title"]' => ['checked' => TRUE],
+        ],
+      ],
+    ];
+    $form['unique_field_ajax']['unique_field_ajax_message'] = [
+      '#type' => 'textarea',
+      '#title' => t("Error message"),
+      '#description' => t("The message to show under the field when the value is not unique"),
+      '#default_value' => $entity->getThirdPartySetting('unique_field_ajax', 'message'),
+      '#weight' => -7,
+      '#states' => [
+        'visible' => [
+          ':input[name="unique_field_ajax_unique_title"]' => ['checked' => TRUE],
+        ],
+      ],
+    ];
+
+    $form['#entity_builders'][] = '_unique_field_ajax_entity_form_builder';
+  }
+}
+
+/**
+ * Determine if this is a form for titleable entity config.
+ *
+ * @param string $form_id
+ *
+ * @return bool
+ */
+function _unique_field_ajax_is_config_form($form_id) {
+  // TODO: can this be generalized?
+  $entity_config_forms = [
+    'node_type_edit_form', 'node_type_add_form',
+  ];
+  return in_array($form_id, $entity_config_forms);
+}
+
+/**
+ * Save the third-party setting.
+ *
+ * @param [type] $entity_type
+ * @param \Drupal\Core\Entity\EntityInterface $entity
+ * @param [type] $form
+ * @param \Drupal\Core\Form\FormStateInterface $form_state
+ *
+ * @return void
+ */
+function _unique_field_ajax_entity_form_builder($entity_type, EntityInterface $entity, &$form, FormStateInterface $form_state) {
+  if ($form_state->getValue('unique_field_ajax_unique_title')) {
+    $entity->setThirdPartySetting('unique_field_ajax', 'unique_title', $form_state->getValue('unique_field_ajax_unique_title'));
+  }
+  else {
+    $entity->unsetThirdPartySetting('unique_field_ajax', 'unique_title');
+  }
+
+  if ($form_state->getValue('unique_field_ajax_per_lang')) {
+    $entity->setThirdPartySetting('unique_field_ajax', 'per_lang', $form_state->getValue('unique_field_ajax_per_lang'));
+  }
+  else {
+    $entity->unsetThirdPartySetting('unique_field_ajax', 'per_lang');
+  }
+
+  if ($form_state->getValue('unique_field_ajax_use_ajax')) {
+    $entity->setThirdPartySetting('unique_field_ajax', 'use_ajax', $form_state->getValue('unique_field_ajax_use_ajax'));
+  }
+  else {
+    $entity->unsetThirdPartySetting('unique_field_ajax', 'use_ajax');
+  }
+
+  $entity->setThirdPartySetting('unique_field_ajax', 'message', $form_state->getValue('unique_field_ajax_message'));
+}
+
 /**
  * Attaching data to unique fields.
  *
@@ -110,28 +230,91 @@ function unique_field_ajax_form_field_config_edit_form_alter(&$form, FormStateIn
 function unique_field_ajax_field_widget_form_alter(&$element, FormStateInterface $form_state, $context) {
   $field_definition = $context['items']->getFieldDefinition();
   $name = $field_definition->getFieldStorageDefinition()->getName();
+  $is_unique_per_lang = NULL;
+
   if ($field_definition instanceof FieldConfig) {
-    $is_unique_per_lang = NULL;
-    if ((\Drupal::moduleHandler()
-        ->moduleExists('language')) && \Drupal::languageManager()
-        ->getCurrentLanguage()
-        ->getId()
-    ) {
-      $is_unique_per_lang = $field_definition->getThirdPartySetting('unique_field_ajax', 'per_lang');
-    }
+    $label = $field_definition->label();
     if ($field_definition->getThirdPartySetting('unique_field_ajax', 'unique')) {
+      if (_unique_field_ajax_language_id_exists()) {
+        $is_unique_per_lang = $field_definition->getThirdPartySetting('unique_field_ajax', 'per_lang');
+      }
+      $message = $field_definition->getThirdPartySetting('unique_field_ajax', 'message');
+      $use_ajax = $field_definition->getThirdPartySetting('unique_field_ajax', 'use_ajax');
+      _unique_field_ajax_inject_validation($element, $is_unique_per_lang, $name, $label, $message, $use_ajax);
+    }
+  }
 
-      $element['value']['#unique_field_ajax_settings'] = [
-        'per_lang' => $is_unique_per_lang,
-        'field_definition' => $field_definition,
-        'field_name' => $name,
-      ];
-
-      $element['value']['#element_validate'][] = 'unique_field_ajax_validate_unique';
-      if ($field_definition->getThirdPartySetting('unique_field_ajax', 'use_ajax')) {
-        $element['#process'] = ['_unique_field_ajax_process'];
+  // Check if this is the title (base field label) and if the parent entity enforces unique titles.
+  if ($field_definition instanceof BaseFieldDefinition ||
+      $field_definition instanceof BaseFieldOverride) {
+    $entity = NULL;
+    // IEF support.
+    if (isset($context['form']) && isset($context['form']['#type']) && $context['form']['#type'] == 'inline_entity_form') {
+      $entity = $context['form']['#default_value'];
+    }
+    else {
+      $form_object = $form_state->getFormObject();
+      if (method_exists($form_object, 'getEntity')) {
+        $entity = $form_object->getEntity();
       }
     }
+    if ($entity) {
+      $entity_type = $entity->getEntityType();
+      if (($entity_type instanceof ContentEntityType) && $entity_type->hasKey('label')) {
+        $entity_label = $entity_type->getKey('label');
+        if ($entity_label == $name) {
+          $bundle_def_id = $entity_type->getBundleEntityType();
+          if ($bundle_def_id) {
+            $bundle_def = \Drupal::service('entity_type.manager')->getStorage($bundle_def_id)->load($entity->bundle());
+            if ($bundle_def->getThirdPartySetting('unique_field_ajax', 'unique_title')) {
+              if (_unique_field_ajax_language_id_exists()) {
+                $is_unique_per_lang = $bundle_def->getThirdPartySetting('unique_field_ajax', 'per_lang');
+              }
+              $message = $bundle_def->getThirdPartySetting('unique_field_ajax', 'message');
+              $use_ajax = $bundle_def->getThirdPartySetting('unique_field_ajax', 'use_ajax');
+              _unique_field_ajax_inject_validation($element, $is_unique_per_lang, $name, $name, $message, $use_ajax);
+            }
+          }
+        }
+      }
+    }
+  }
+}
+
+/**
+ * Return the current language ID if it exists.
+ *
+ * @return string
+ */
+function _unique_field_ajax_language_id_exists() {
+  return (\Drupal::moduleHandler()->moduleExists('language'))
+    && \Drupal::languageManager()
+      ->getCurrentLanguage()
+      ->getId();
+}
+
+/**
+ * Place the validators on the element.
+ *
+ * @param array $element
+ * @param bool $is_unique_per_lang
+ * @param string $name
+ * @param string $label
+ * @param string $message
+ *
+ * @return void
+ */
+function _unique_field_ajax_inject_validation(&$element, $is_unique_per_lang, $name, $label, $message, $use_ajax) {
+  $element['value']['#unique_field_ajax_settings'] = [
+    'per_lang' => $is_unique_per_lang,
+    'field_name' => $name,
+    'field_label' => $label,
+    'message' => $message,
+  ];
+
+  $element['value']['#element_validate'][] = 'unique_field_ajax_validate_unique';
+  if ($use_ajax) {
+    $element['#process'] = ['_unique_field_ajax_process'];
   }
 }
 
@@ -159,22 +342,22 @@ function _unique_field_ajax(array &$form, FormStateInterface $form_state) {
  */
 function _unique_field_ajax_process($element, FormStateInterface &$form_state, &$form) {
   $field_name = $element['value']['#unique_field_ajax_settings']['field_name'];
-  $field_definition = $element['value']['#unique_field_ajax_settings']['field_definition'];
-  $field_label = $field_definition->label();
+  $field_label = $element['value']['#unique_field_ajax_settings']['field_label'];
+  $message = $element['value']['#unique_field_ajax_settings']['message'];
   $wrapper = 'unique-' . $field_name;
-  if(!empty($form['#attached']['library']) && !in_array('unique_field_ajax/unique_event',$form['#attached']['library'])){
+  if (!empty($form['#attached']['library']) && !in_array('unique_field_ajax/unique_event', $form['#attached']['library'])) {
     $form['#attached']['library'][] = 'unique_field_ajax/unique_event';
   }
-  $settings = array('id' => '#'.$wrapper.' input');
+  $settings = ['id' => '#' . $wrapper . ' input'];
   $form['#attached']['drupalSettings']['unique_field_ajax'][] = $settings;
   $element['value']['#ajax'] = [
     'callback' => '_unique_field_ajax',
     'event' => 'finishedinput',
     'wrapper' => $wrapper,
-    'progress' => array(
+    'progress' => [
       'type' => 'throbber',
-      'message' => t('Verifying @field_label...', array('@field_label' => $field_label)),
-    )
+      'message' => t('Verifying @field_label...', ['@field_label' => $field_label]),
+    ],
   ];
   $element['value']['#prefix'] = '<div id="' . $wrapper . '">';
   $element['value']['#suffix'] = '</div>';
@@ -186,7 +369,6 @@ function _unique_field_ajax_process($element, FormStateInterface &$form_state, &
   $langcode = (!empty($form_state->getValues()['langcode'][0]['value'])) ?
     $form_state->getValues()['langcode'][0]['value'] : '0';
   $valid = unique_field_ajax_is_unique($entity_type, $langcode, $field_name, $value, $entity->bundle(), $element['value']['#unique_field_ajax_settings']['per_lang'], $entity);
-  $message = $field_definition->getThirdPartySetting('unique_field_ajax', 'message');
   if (empty($message)) {
     $message = t('This field has to be unique.');
   }
@@ -210,15 +392,14 @@ function unique_field_ajax_validate_unique($element, FormStateInterface $form_st
       $form_state->getValues()['langcode'][0]['value'] : '0';
 
   $field_name = $element['#unique_field_ajax_settings']['field_name'];
-  $field_definition = $element['#unique_field_ajax_settings']['field_definition'];
-  $field_label = $field_definition->label();
+  $field_label = $element['#unique_field_ajax_settings']['field_label'];
   $value = $form_state->getValue($field_name);
   $entity_type = $entity->getEntityTypeId();
 
   // If field is not unique set error.
   $valid = unique_field_ajax_is_unique($entity_type, $langcode, $field_name, $value[0]['value'], $entity->bundle(), $element['#unique_field_ajax_settings']['per_lang'], $entity);
   if (!$valid) {
-    $form_state->setErrorByName($field_name, t('The field @field_label has to be unique.', array('@field_label' => $field_label)));
+    $form_state->setErrorByName($field_name, t('The field @field_label has to be unique.', ['@field_label' => $field_label]));
     $form_state->setRebuild();
   }
 }
